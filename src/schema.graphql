type Recent {
  id : Int!
  users : Users!
  flowers : Flowers!
  createRecent : String!
  updateRecent : String!
}

type Images {
  id : Int!
  image: String!
  createImage: String!
  updateImage: String!
  flowers: Flowers!
}

type Librarys{
  id : Int!
  name: String!
  users: Users!
  saveFlower: [SaveFlower]
  createLibrary: String!
  updateLibrary: String!
}

type SaveFlower {
  id : Int!
  librarys: Librarys!
  flowers: Flowers!
}

type FlowerType {
  id : Int!
  name: String!
  flowers: [Flowers]
}

type Comment {
  id : Int!
  comment: String!
  users: Users!
  flowers: Flowers
  incomment: [Comment]
  parentComment : Comment
  likes: [Like]
}

type Like {
  id : Int!
  users: Users!
  flowers: Flowers
  comment: Comment
}

type Flowers {
  id : Int!
  image: String!
  name: String!
  content: String!
  weather: String!
  hits: Int!
  type: FlowerType!
  images: [Images]
  saveFlower: [SaveFlower]
  recent : [Recent]
  createFlower: String!
  updateFlower: String!
}

type Users {
  id : Int!
  email: String!
  password: String!
  librarys: [Librarys]
  like: [Like]
  comment: [Comment]
  recent : [Recent]
  createUser: String!
  updateUser: String!
}

type GetRecentResponse {
  result: Boolean!
  error: String
  recent: [Recent]
}

type GetLibraryResponse {
  result: Boolean!
  error: String
  librarys: [Librarys]
}

type GetSaveFlowerResponse {
  result: Boolean!
  error: String
  saveFlower: [SaveFlower]
}

type GetFlowerTypeResponse{
  result : Boolean!
  error : String
  type : [FlowerType]
}

type GetFlowersResponse{
  result : Boolean!
  error : String
  flowers : [Flowers]
}

type GetCommentResponse{
  result : Boolean!
  error : String
  comment : [Comment]
}

type Query {
  GetRecent: GetRecentResponse
  GetLibrary: GetLibraryResponse
  GetSaveFlower(libraryid : Int!): GetSaveFlowerResponse
  GetFlowerType : GetFlowerTypeResponse
  GetFlowers(typeid : Int!) : GetFlowersResponse
  GetComment(flowersid : Int!) : GetCommentResponse
}

type Mutation {
  EmailLogin(email: String! , password : String!): EmailLoginResponse
  EmailRegist(email : String! , password : String!): EmailRegistResonse
  CreateImage(image : String! ,content : String , flowerid : Int!): CreateImageResponse
  DeleteImage(id : Int! ): DeleteImageResponse
  EditImage(id : Int! ,image: String!, content : String, flowerid : Int) : EditImageResponse
  CreateLibrary(name : String!): CreateLibraryResponse
  DeleteLibrary(id : Int!) : DeleteLibraryResponse
  EditLibrary(id : Int! , name  : String!) : EditLibraryResponse
  CreateFlower( input : FlowerInput! , typeid : Int!) : CreateFlowerResponse
  DeleteFlower( id : Int!) : DeleteFlowerResponse
  EditFlower(id : Int! , input : FlowerInput! , typeid : Int ) : EditFlowerResponse
  UpHitFlower( id : Int! ) : UpHitFlowereResponse
  CreateComment( comment : String! , flowerid : Int , commentid : Int) : CreateCommentResponse
  DeleteComment( id : Int!) : DeleteCommentResponse
  EditComment(id : Int! , comment : String!) : EditCommentResponse
  Like(flowerid:Int , commentid : Int) : LikeResponse
  CreateFlowerType(name : String!): CreateFlowerTypeResponse
  DeleteFlowerType(id : Int!): DeleteFlowerTypeResponse
  EditFlowerType(id : Int! , name : String!) : EditFlowerTypeResponse
  CreateRecent(id : Int!) : CreateRecentResponse
  CreateSaveFlower(flowerid : Int! , libraryid : Int!) : CreateSaveFlowerResponse
  DeleteSaveFlower(id : Int!) : DeleteSaveFlowerResponse
}

type DeleteSaveFlowerResponse{
  result : Boolean!
  error : String
}

type CreateSaveFlowerResponse{
  result : Boolean!
  error : String
}

type CreateRecentResponse{
  result : Boolean!
  error : String
}

type EditImageResponse {
  result : Boolean!
  error : String
}

type EditFlowerTypeResponse{
  result : Boolean!
  error : String
}

type EditFlowerResponse{
  result : Boolean!
  error : String
}

type EditCommentResponse{
  result : Boolean!
  error : String
}

type CreateFlowerTypeResponse{
  result : Boolean!
  error : String
}

type DeleteFlowerTypeResponse{
  result : Boolean!
  error : String
}

type DeleteFlowerResponse{
  result : Boolean!
  error : String
}

type EditLibraryResponse{
  result : Boolean!
  error : String
}

type LikeResponse{
  result : Boolean!
  error : String
}

type DeleteLibraryResponse{
  result : Boolean!
  error : String
}

type DeleteCommentResponse{
  result : Boolean!
  error : String
}

type CreateCommentResponse{
  result : Boolean!
  error : String
}

type UpHitFlowereResponse{
  result : Boolean!
  error : String
}

type EmailLoginResponse {
  result: Boolean!
  error: String
  token: String
}

type EmailRegistResonse {
  result: Boolean!
  error: String
  token: String
}

type CreateImageResponse {
  result: Boolean!
  error: String
}

type DeleteImageResponse {
  result: Boolean!
  error: String
}

type CreateLibraryResponse {
  result: Boolean!
  error: String
}

type CreateFlowerResponse{
  result: Boolean!
  error: String
}


input FlowerInput{
  image: String!
  name: String!
  content: String!
  weather: String!
}