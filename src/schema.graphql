type Recent {
  id : Int!
  users : Users!
  flowers : Flowers!
  createRecent : String!
  updateRecent : String!
}

type Collection  {
  id: Int!
  name: String!
  flowers: [Flowers]
  view: Boolean!
}

type Images {
  id : Int!
  image: String!
  content : String
  createImage: String!
  updateImage: String!
  flowers: Flowers!
}

type Librarys{
  id : Int!
  name: String!
  users: Users!
  saveFlower: [SaveFlower]
  createLibrary: String!
  updateLibrary: String!
}

type SaveFlower {
  id : Int!
  librarys: Librarys!
  flowers: Flowers!
}

type FlowerType {
  id : Int!
  name: String!
  flowers: [Flowers]
}

type Comment {
  id : Int!
  comment: String!
  users: Users!
  flowers: Flowers
  incomment: [Comment]
  parentComment : Comment
  likes: [Like]
  createComment : String!
  updateComment : String
  incommentCount : Int
}

type Like {
  id : Int!
  users: Users!
  flowers: Flowers
  comment: Comment
}

type Flowers {
  id : Int!
  image: String!
  name: String!
  content: String!
  hits: Int!
  type: FlowerType!
  images: [Images]
  saveFlower: [SaveFlower]
  recent : [Recent]
  createFlower: String!
  updateFlower: String!
}

type Users {
  id : Int!
  userid : Int!
  nickname : String!
  librarys: [Librarys]
  like: [Like]
  comment: [Comment]
  recent : [Recent]
  questions: [Questions]
  createUser: String!
  updateUser: String!
}

type Questions  {
  id: Int!
  question: String!
  users: Users!
  createQuestion:String!
  updateQuestion:String!
}



type GetRecentResponse {
  result: Boolean!
  error: String
  recent: [Recent]
}

type GetLibraryResponse {
  result: Boolean!
  error: String
  librarys: [Librarys]
}

type GetSaveFlowerResponse {
  result: Boolean!
  error: String
  saveFlower: [SaveFlower]
}

type GetFlowerTypeResponse{
  result : Boolean!
  error : String
  type : [FlowerType]
}

type GetFlowersResponse{
  result : Boolean!
  error : String
  flowers : [Flowers]
}

type GetCommentResponse{
  result : Boolean!
  error : String
  comment : [Comment]
}

type GetUsersResponse{
  result : Boolean!
  error : String
  nickname : String!
}

type GetFlowerResponse{
  result : Boolean!
  error : String
  flower : Flowers
}

type GetLikeResponse{
  result : Boolean!
  error : String
  like_count : Int!
}

type GetInCommentResponse{
  result : Boolean!
  error :String
  comment : Comment
  mine : Boolean!
}

type UserFindResponse{
  result:Boolean!
  error :String
  token:String
}

type GetUserLikeResponse{
    result : Boolean!
    error : String
    likes : [Like]
}

type GetQuestionsResponse{
    result : Boolean!
    error : String
    questions : [Questions]
}
type GetCollectionResponse{
    result : Boolean!
    error : String
    collection :[Collection]
}


type Query {
  GetRecent: GetRecentResponse
  GetLibrary: GetLibraryResponse
  GetSaveFlower(libraryid : Int!): GetSaveFlowerResponse
  GetFlowerType : GetFlowerTypeResponse
  GetFlowers(typeid : Int!) : GetFlowersResponse
  GetComment(flowersid : Int!) : GetCommentResponse
  GetUsers : GetUsersResponse
  GetFlower(id: Int!) : GetFlowerResponse
  GetLike(flowerid:Int , commentid:Int) : GetLikeResponse
  GetInComment(id:Int!) : GetInCommentResponse
  UserFind(userid : Int!) : UserFindResponse
    GetUserLike : GetUserLikeResponse
    GetQuestions : GetQuestionsResponse
    GetCollection : GetCollectionResponse

}

type Mutation {
  CreateImage(image : String! ,content : String , flowerid : Int!): CreateImageResponse
  DeleteImage(id : Int! ): DeleteImageResponse
  EditImage(id : Int! ,image: String!, content : String, flowerid : Int) : EditImageResponse
  CreateLibrary(name : String!): CreateLibraryResponse
  DeleteLibrary(id : Int!) : DeleteLibraryResponse
  EditLibrary(id : Int! , name  : String!) : EditLibraryResponse
  CreateFlower( input : FlowerInput! , typeid : Int!) : CreateFlowerResponse
  DeleteFlower( id : Int!) : DeleteFlowerResponse
  EditFlower(id : Int! , input : FlowerInput! , typeid : Int ) : EditFlowerResponse
  UpHitFlower( id : Int! ) : UpHitFlowereResponse
  CreateComment( comment : String! , flowerid : Int , commentid : Int) : CreateCommentResponse
  DeleteComment( id : Int!) : DeleteCommentResponse
  EditComment(id : Int! , comment : String!) : EditCommentResponse
  Like(flowerid:Int , commentid : Int) : LikeResponse
  CreateFlowerType(name : String!): CreateFlowerTypeResponse
  DeleteFlowerType(id : Int!): DeleteFlowerTypeResponse
  EditFlowerType(id : Int! , name : String!) : EditFlowerTypeResponse
  CreateRecent(id : Int!) : CreateRecentResponse
  CreateSaveFlower(flowerid : Int! , libraryid : Int!) : CreateSaveFlowerResponse
  DeleteSaveFlower(id : Int!) : DeleteSaveFlowerResponse
  DeleteSave(libraryid : Int!, flowerid:Int!) : DeleteSaveFlowerResponse
  Logins(userid: Int! , nickname:String) : LoginResponse
  EditProfile(nickname:String!) : EditProfileResponse
  CreateQuestions(question : String!) : CreateQuestionsResponse
  CreateCollection(name : String!) : CreateCollectionResponse
    EditCollection(id:Int! , flowersid:[Int]!) : EditCollectionResponse
    ViewCollection(id:[Int]) : ViewCollectionResponse
}

type ViewCollectionResponse{
    result : Boolean!
    error : String
}

type EditCollectionResponse{
    result : Boolean!
    error : String
}

type CreateCollectionResponse{
    result:Boolean!
    error :String
}
type CreateQuestionsResponse{
    result : Boolean!
    error : String
}

type EditProfileResponse{
  result : Boolean!
  error : String
  nickname: String!

}

type LoginResponse{
  result : Boolean!
  error : String
  token : String
  nickname : String!

}

type DeleteSaveFlowerResponse{
  result : Boolean!
  error : String
}

type CreateSaveFlowerResponse{
  result : Boolean!
  error : String
}

type CreateRecentResponse{
  result : Boolean!
  error : String
}

type EditImageResponse {
  result : Boolean!
  error : String
}

type EditFlowerTypeResponse{
  result : Boolean!
  error : String
}

type EditFlowerResponse{
  result : Boolean!
  error : String
}

type EditCommentResponse{
  result : Boolean!
  error : String
}

type CreateFlowerTypeResponse{
  result : Boolean!
  error : String
}

type DeleteFlowerTypeResponse{
  result : Boolean!
  error : String
}

type DeleteFlowerResponse{
  result : Boolean!
  error : String
}

type EditLibraryResponse{
  result : Boolean!
  error : String
}

type LikeResponse{
  result : Boolean!
  error : String
}

type DeleteLibraryResponse{
  result : Boolean!
  error : String
}

type DeleteCommentResponse{
  result : Boolean!
  error : String
}

type CreateCommentResponse{
  result : Boolean!
  error : String
}

type UpHitFlowereResponse{
  result : Boolean!
  error : String
}

type CreateImageResponse {
  result: Boolean!
  error: String
}

type DeleteImageResponse {
  result: Boolean!
  error: String
}

type CreateLibraryResponse {
  result: Boolean!
  error: String
}

type CreateFlowerResponse{
  result: Boolean!
  error: String
}


input FlowerInput{
  image: String!
  name: String!
  content: String!
}